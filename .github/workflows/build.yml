name: Build Binaries and Plugin

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  build-binaries:
    name: Build binary on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 📦 Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: 🛠 Build Python executable
        run: |
          pyinstaller --onefile server.py

      - name: 📤 Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.os }}
          path: dist/server*

  build-plugin:
    name: Build ${{ matrix.plugin }} for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        plugin: [pluginA, pluginB, pluginC]

    steps:
      - name: 🧾 Checkout Code
        uses: actions/checkout@v4

      - name: 🧰 Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 22

      - name: 💽 Install dependencies
        run: mvn install -DskipTests

      - name: 🔧 Build plugin
        run: |
          echo "Building ${{ matrix.plugin }} with OS binary"
          chmod +x server-${{ matrix.os }}
          ./server-${{ matrix.os }} build-${{ matrix.plugin }}

      - name: 📦 Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.plugin }}-${{ matrix.os }}
          path: |
            target/${{ matrix.plugin }}.jar
  release:
    name: 🚀 Release Artifacts
    needs: [build-binaries, build-plugin]
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Download binaries
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: 📥 Download plugin JAR
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: 🚀 Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          files: |
            artifacts/binary-ubuntu-latest/server*
            artifacts/binary-windows-latest/server*.exe
            artifacts/binary-macos-latest/server*
            artifacts/plugin-jar/!(*original-*)*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
